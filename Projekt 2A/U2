%U2:
%a) L ̈os analytiskt differentialekvationen (8) med f (x) = d cos(2x) och blandade randvillkor
%enligt (10).

% Lösning:
% u(x) = γ/4*sin(4x) + (δ - d/12)cos(4x) + d/12*cos(2x)

%b) Diskretisera randv ̈ardesproblemet med finita differens approximationer enligt ovan och
%formulera det linj ̈ara ekvationssystemet som ska l ̈osas p ̊a formen (11) f ̈or godtyckligt N .

% se matris

%% c) Skriv ett MATLAB-program som f ̈or ett givet N , f (x) och v ̈arden p ̊a γ och δ ber ̈aknar
%en numerisk approximation till randv ̈ardesproblemet.

% väljer N=1000, f(x) = 5cos(2x) (d = 5), δ = 1, γ = 1.
a=0;
b=2*pi;
d=5;
N=1000;
gamma=1;
delta=1;
h=(b-a)/N;
x=linspace(a+h, b-h, N-1);

f = d*cos(2*x);

A = full(gallery('tridiag', N-1, h^(-2), (16 - (2*h^(-2))), h^(-2)));

A(1,1) = 16 - (2/(3*h^(2)));
A(1,2) = 2/(3*h^(2));
%A(end, end-2) = 0;

f(1) = f(1) + 2/(3*h)*gamma;
f(end) = f(end) - (delta*h^(-2));

u = A \ f';

plot(x, u, 'b')
legend(' Numerisk lösning för N=1000')

%% d) L ̊at f (x) vara som i (a) med d = 5 och s ̈att γ = 1, δ = 1. L ̈os problemet med N = 400,
%plotta den numeriska approximationen samt den analytiska l ̈osningen i samma plot  ̈over
%intervallet [0, 2π]. Plotta ocks ̊a felet  ̈over intervallet i en annan plot.

a=0;
b=2*pi;
d=5;
N=400;
gamma=1;
delta=1;
h=(b-a)/N;
x=linspace(a+h, b-h, N-1);

f = d*cos(2*x);

A = full(gallery('tridiag', N-1, h^(-2), (16 - (2*h^(-2))), h^(-2)));

A(1,1) = 16 - (2/(3*h^(2)));
A(1,2) = 2/(3*h^(2));
%A(end, end-2) = 0;

f(1) = f(1) + 2/(3*h)*gamma;
f(end) = f(end) - (delta*h^(-2));

u = A \ f';

% analytiska lösningen 

ua = (gamma/4)*sin(4*x) + (delta - d/12)*cos(4*x) + (d/12)*cos(2*x);

figure
plot(x, u, 'b')
hold on
plot(x, ua, 'r--')
legend({'Numerisk lösning', 'analytisk lösning'})

% fel

F=[];
for i=1:length(x)
    fel = ua(i)-u(i);
    F=[F, fel];

end


figure
plot(x, F)
xlabel('x')
ylabel('fel')
legend('Fel mellan analytisk och numerisk lösning')

%% e) F ̈or data som i (d), ber ̈akna det diskreta 2-felet i den numeriska approximationen f ̈or
%N = 50, 100, 200, 400, 800. Ber ̈akna noggrannhetsordning f ̈or metoden baserat p ̊a dessa
%resultat. Beskriv hur du g ̊att till v ̈aga, och presentera uppm ̈atta fel och noggrannhet-
%sordning i en tabell.

a=0;
b=2*pi;
d=5;
gamma=1;
delta=1;

N_vec = [50, 100, 200, 400, 800];

nog_ord=[length(N_vec), 1];

for i=1:length(N_vec)

N=N_vec(i);
h=(b-a)/N;
x=linspace(a+h, b-h, N-1);

f = d*cos(2*x);

A = full(gallery('tridiag', N-1, h^(-2), (16 - (2*h^(-2))), h^(-2)));
A(1,1) = 16 - (2/(3*h^(2)));
A(1,2) = 2/(3*h^(2));

f(1) = f(1) + 2/(3*h)*gamma;
f(end) = f(end) - (delta*h^(-2));

u = A \ f';

% analytiska lösningen 

ua = ((gamma/4)*sin(4*x) + (delta - d/12)*cos(4*x) + (d/12)*cos(2*x))';

DF(i) = sqrt( sum( (u-ua).^2 )/ (N+1) );

if i>1

nog_ord(i) = log(DF(i-1)/DF(i)) / log(2);
nog_ord(i-1) = log(DF(i-1)/DF(i)) / log(2);

end

end

T = table(N_vec', DF', nog_ord', 'VariableNames', {'N', 'diskreta 2-normen', 'Noggrannhetsordning'});
disp(T)


%% f) F ̈or f (x) = e−(x−π)2
%ber ̈akna en numerisk approximation till l ̈osningen med:
% (i) γ = 0, δ = 0 och 
% (ii) γ = 1, δ = 0. Plotta b ̊ada l ̈osningarna i en figur och kommentera p ̊a
%skillnaden.

a=0;
b=2*pi;
d=5;
N=400;
gamma=[0, 1];
delta=0;
h=(b-a)/N;
x=linspace(a+h, b-h, N-1);
f = exp(-(x-pi).^2);

A = full(gallery('tridiag', N-1, h^(-2), (16 - (2*h^(-2))), h^(-2)));

A(1,1) = 16 - (2/(3*h^(2)));
A(1,2) = 2/(3*h^(2));

for i=1:2
f(1) = f(1) + 2/(3*h)*gamma(i);
f(end) = f(end) - (delta*h^(-2));

u = A \ f';
plot(x,u)
hold on
end

legend('γ=δ=0', 'γ=1, δ=0')


