% Parametrar
N = 16;                    % Antal punkter
t = 0.1;                   % Tidsvärde
x = linspace(0, 1, N);     % Diskretisering av x-intervallet [0, 1]

% Den exakta lösningen u(x,t)
u_a = exp(-4 * t * pi^2) * sin(2 * pi * x);

% Fouriertransform av initialvillkoret (t = 0)
% Initialtillståndet är u(x,0) = sin(2 * pi * x)
u0 = sin(2 * pi * x);

% Beräkna Fourierkoefficienter av u0 (FFT)
u0_hat = fft(u0);

% Tidsutveckling av Fourierkoefficienterna
% Exponentiell faktor för varje Fourierkomponent
k = (0:N-1);  % Vågrökningsnummer
k = k - floor(N/2);  % Justera så att k går från -N/2 till N/2-1
u_hat_t = u0_hat .* exp(-4 * t * pi^2 * k.^2);  % FFT av lösningen vid tid t

% Återställ lösningen i den fysiska domänen (IFFT)
u_fft = ifft(u_hat_t);

% Plot den exakta lösningen och FFT-lösningen
figure;
subplot(2,1,1);
plot(x, u_a, 'r', 'DisplayName', 'Exakt lösning');
hold on;
plot(x, real(u_fft), 'b', 'DisplayName', 'FFT lösning');
legend;
title('Exakt lösning vs FFT-lösning');
xlabel('x');
ylabel('u(x,t)');
grid on;

% Beräkna och plot felet mellan den exakta lösningen och FFT-lösningen
error = abs(u_a - real(u_fft));

subplot(2,1,2);
plot(x, error, 'k', 'DisplayName', 'Fel i FFT lösning');
title('Fel mellan exakt lösning och FFT lösning');
xlabel('x');
ylabel('Fel');
grid on;
