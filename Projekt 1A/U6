%U6: Den momentana radien ges av
%R(t) = b(vR(t) + vL(t))2(vR(t) − vL(t)) .
%Vi vill nu best amma aR s ̊a att vid en tidpunkt t = T g ̈aller R(T ) =  ̄R d ̈ar  ̄R = 1 m och
% ̈ovriga parametrar ges av 
% aL = 0.4 m/s2, wR = 3 m/s, wL = 1 m/s, b = 1 m. (R=1)

%a) L ̊at T = 1 och best ̈am aR med Newton-Raphsons metod. G ̈or en plot med Newton-
%Raphson-funktionen p ̊a y-axeln och aR p ̊a x-axeln och utg ̊a fr ̊an plotten f ̈or att best ̈amma
%startgissning. Vilken startgissning anv ̈ande ni och vilket resultat fick ni? Verifiera
%kvadratisk konvergens f ̈or Newton-Raphsons metod.

%b)  ̈Andra till T = 2 och l ̈os  ̊aterigen f ̈or aR. Vad noterar du? K ̈or koden du anv ̈ande i U5
%med dessa parametrar. Hur r ̈or sig roboten?

%s = fvel(t, s, b, aL, aR, wL, wR);
aL=0.4;
wR=3;
wL=1;
b=1;
t=1;
aR=1.1;
% x = x0 - f(x0)/f'(x0)
h=10^(-8);
R = (b*((aR*t+wR) + (aL*t+wL)))/(2*((aR*t+wR) - (aL*t+wL)));
Rprim = (((b*(((aR+h)*t+wR) + (aL*t+wL)))/(2*(((aR+h)*t+wR)) - ((aL*t+wL)))-(b*((aR*t+wR) + (aL*t+wL)))/(2*((aR*t+wR) - (aL*t+wL)))))/h;
differens=R-1;
i=0;
AR=[];
R1=[];
%while abs(differens)>=10^(-8)
for a=1:1000
    R = (b*(aR*t+wR + aL*t+wL))/(2*(aR*t+wR) - (aL*t+wL));
    Rprim = ((b*((aR*(t+h)+wR) + (aL*(t+h)+wL)))/(2*((aR*(t+h)+wR)) - ((aL*t+wL)))-(b*((aR*t+wR) + (aL*t+wL)))/(2*((aR*t+wR) - (aL*t+wL))))/h;
    aR1 = aR;
    aR = aR1 - R/Rprim;
    i = i+1;
    differens=abs(aR1-aR);
    AR=[AR, aR];
    R1=[R1, R];
end
plot(R1, AR)

% startgissning?

%%
%kvadratisk konvergens
K = [];
aL=0.4;
wR=3;
wL=1;
b=1;
aR=0;
t=1;
h=10^(-8);
i=0;
differens=R-1;
while differens>=10^(-10)
    R = (b*(aR*t+wR + aL*t+wL))/(2*(aR*t+wR) - (aL*t+wL));
    Rprim = ((b*((aR*(t+h)+wR) + (aL*(t+h)+wL)))/(2*((aR*(t+h)+wR)) - ((aL*t+wL)))-(b*((aR*t+wR) + (aL*t+wL)))/(2*((aR*t+wR) - (aL*t+wL))))/h;
    aR2 = aR1;
    aR1 = aR;
    aR = aR1 - R/Rprim;
    i = i+1;
    differens=abs(aR1-aR);
    K = [K, abs(aR-aR1)/abs((aR1-aR2)^2)];
end
plot(K)

%% T=2

%s = fvel(t, s, b, aL, aR, wL, wR);
aL=0.4;
wR=3;
wL=1;
b=1;
aR=0;
t=2;
h=10^(-8);
i=0;
differens=R-1;
AR=[];
R1=[];

while differens>=10^(-1)
    R = (b*(aR*t+wR + aL*t+wL))/(2*(aR*t+wR) - (aL*t+wL));
    Rprim = ((b*((aR*(t+h)+wR) + (aL*(t+h)+wL)))/(2*((aR*(t+h)+wR)) - ((aL*t+wL)))-(b*((aR*t+wR) + (aL*t+wL)))/(2*((aR*t+wR) - (aL*t+wL))))/h;
    aR1 = aR;
    aR = aR1 - R/Rprim;
    i = i+1;
    differens=abs(aR1-aR);
    AR=[AR, aR];
    R1=[R1,R];
    
    
end
plot(R1,AR)

%% Kör koden i U5 med dessa parametrar 

aL=0.4; wR=3; wL=1; b=1; aR=0; 
b = 1;
B = (wR+wL)/2;
D = (wR-wL)/b;
theta0=0;
x0=(B/D)*sin(theta0);
y0=-(B/D)*cos(theta0);
s=[x0 y0 theta0];
initial_values = [x0;y0;theta0];
tspan = [0 pi];

options = odeset('RelTol',1e-6,'Refine',4);

[t,y45] = ode45(@(t,y) fvel(t, y, b, aL, aR, wL, wR),tspan,initial_values,options)

plot(y45(:,1), y45(:,2));
axis equal
