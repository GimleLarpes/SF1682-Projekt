%U6: Den momentana radien ges av
%R(t) = b(vR(t) + vL(t))2(vR(t) − vL(t)) .
%Vi vill nu best ̈amma aR s ̊a att vid en tidpunkt t = T g ̈aller R(T ) =  ̄R d ̈ar  ̄R = 1 m och
% ̈ovriga parametrar ges av 
% aL = 0.4 m/s2, wR = 3 m/s, wL = 1 m/s, b = 1 m. (R=1)

%a) L ̊at T = 1 och best ̈am aR med Newton-Raphsons metod. G ̈or en plot med Newton-
%Raphson-funktionen p ̊a y-axeln och aR p ̊a x-axeln och utg ̊a fr ̊an plotten f ̈or att best ̈amma
%startgissning. Vilken startgissning anv ̈ande ni och vilket resultat fick ni? Verifiera
%kvadratisk konvergens f ̈or Newton-Raphsons metod.

%b)  ̈Andra till T = 2 och l ̈os  ̊aterigen f ̈or aR. Vad noterar du? K ̈or koden du anv ̈ande i U5
%med dessa parametrar. Hur r ̈or sig roboten?

%s = fvel(t, s, b, aL, aR, wL, wR);
aL=0.4;
wR=3;
wL=1;
b=1;
aR=0;
t=pi;
differens=1;
% x = x0 - f(x0)/f'(x0)

R = (b*((aR*t+wR) + (aL*t+wL)))/(2*((aR*t+wR) - (aL*t+wL)));
Rprim = ((((b*(aR+aL))*(2*((aR*t+wR)-(aL*t+wL))))-(b*((aR*t+wR)+(aL*t+wL)))*(2*(aR-aL))))/((2*((aR*t+wR)-(aL*t+wL)))^2);

%i=0;
aR=0;

while differens>=10^(-4)
    R = (b*(aR*t+wR + aL*t+wL))/(2*(aR*t+wR) - (aL*t+wL));
    Rprim = ((b*(aR+aL))*(2*(aR*t+wR-aL*t-wL))-b*(aR*t+wR+aL*t+wL)*2*(aR-aL))/(2*(aR*t+wR-(aL*t+wL))^2);
    aR1 = aR;
    aR = aR1 - R/Rprim;
   %i = i+1;
    differens=abs(aR1-aR);
end
plot(R, aR)
% startgissning?

%%
%kvadratisk konvergens
K = [];
aL=0.4;
wR=3;
wL=1;
b=1;
aR=0;
t=pi;
differens=1;
while differens>=10^(-4)
    R = (b*(aR*t+wR + aL*t+wL))/(2*(aR*t+wR) - (aL*t+wL));
    Rprim = ((b*(aR+aL))*(2*(aR*t+wR-aL*t-wL))-b*(aR*t+wR+aL*t+wL)*2*(aR-aL))/(2*(aR*t+wR-(aL*t+wL))^2);
    aR2 = aR1;
    aR1 = aR;
    aR = aR1 - R/Rprim;
   %i = i+1;
    differens=abs(aR1-aR);
    K = [K, abs(aR-aR1)/abs((aR1-aR2)^2)];
end
plot(K)

%% T=2

s = fvel(t, s, b, aL, aR, wL, wR);
aL=0.4;
wR=3;
wL=1;
b=1;
aR=1;
t=2*pi;

R = (b*(aR*t+wR + aL*t+wL))/(2*(aR*t+wR) - (aL*t+wL));
Rprim = ((b*(aR+aL))*(2*(aR*t+wR-aL*t-wL))-b*(aR*t+wR+aL*t+wL)*2*(aR-aL))/(2*(aR*t+wR-(aL*t+wL))^2);

%i=0;
aR=0;

while t<T
    R = (b*(aR*t+wR + aL*t+wL))/(2*(aR*t+wR) - (aL*t+wL));
    Rprim = ((b*(aR+aL))*(2*(aR*t+wR-aL*t-wL))-b*(aR*t+wR+aL*t+wL)*2*(aR-aL))/(2*(aR*t+wR-(aL*t+wL))^2);
    aR1 = aR;
    aR = aR1 - R/Rprim;
   %i = i+1;
    t=abs(aR1-aR);
    
end
plot(R, aR)

%% Kör koden i U5 med dessa parametrar 
