%% a) 

function ds=fvel(t, s, b, aL, aR, wL, wR)
    x = s(1);
    y = s(2);
    theta = s(3);
    vR = aR*t + wR;
    vL = aL*t + wL;
    v = (vR + vL)/2;

    dx = v*cos(theta);
    dy = v*sin(theta);

    dtheta = (vR - vL)/b;

    ds = [dx; dy; dtheta];
end

%% b) Skriv ett MATLAB-program som anvander funktionen fvel och med framat Euler (FE) 
%beraknar en approximation till s(t) = [x(t), y(t), θ(t)] fram till en given sluttid.
%%FÖRKORTAD
t=0.2; s=[0.9 -0.2 0.32]; b=1; aL=1; aR=0.8; wL=0.5; wR=0.8;

T=10;

n = 100;
h = T/n;

while t<T 
    t = t + h;
    ds = fvel(t,s,b,aL,aR,wL,wR);
    s = s + ds*h;
end

%%ORGINAL
t=0.2;
s=[0 0 0]; 
b=1;
aL=1;
aR=0.8;
wL=0.5;
wR=0.8;
D = (wR-wL)/b;
T = 10;
n = 100;
h = T/n;

x = 0;
y = 0;
theta = 0;

X = [];
Y = [];
Theta = [];
hold on
for i = n
    t = 0;
    x = 0;
    y = 0;
    theta = 0;
    X = [];
    Y = [];
    Theta = [];
    h=T/n;
    while t < T
        ds=fvel(t, s, b, aL, aR, wL, wR);
        %dx=s(1);
        %dy=s(2);
        %dtheta=s(3);
        t1 = t + h;
        t = t1;
        %x1 = x + h*dx;
        %x = x1;
        %y1 = y + h*dy;      
        %y = y1;
        %theta1 = theta + h*dtheta;
        %theta = theta1;
        s = s + h.*ds;
        X = [X, s(1)];
        Y = [Y, s(2)];
        Theta = [Theta, s(3)];
        %s=[x;y;theta];
    end
end
hold off
s

%% c)
x0=0;
y0=1.5;
t=0; s=[x0 y0 0]; b=1; aL=0; aR=0; wL=4; wR=2;


D=(wR-wL)/b;
T=abs(2*pi/D);

n = 100;
h = T/n;

X=[];
Y=[];

while t<T 
    t = t + h;
    ds = fvel(t,s,b,aL,aR,wL,wR);
    s = s + ds*h;

    X = cat(1, X, s(1));
    Y = cat(1, Y, s(2));
end
plot(X, Y)
axis equal
%mean(X)
%mean(Y)

% sätt x0 och y0 så att mittpunkten för cirkelrörelsen är (0, 0)
% välj sluttid så att roboten kör ett varv
% sätt deltat så att den tar 100 tidssteg
% plotta x(t) och y(t) i en plot.
% kontrollera att mittpunkten och radien blir som förväntat

%% d) 
% använd b) och c) och gör Range-Kutta 4 med samma parametrar, plotta cirklarna från c) och d) i samma plot.
% kör Euler med 1/10 så stort tidssteg och plotta igen. Slutsats?

%% e)
tend = 7*pi/8
N = 100
deltat = tend/N

% vad blir felen i x vid sluttiden för de två metoderna?

%% f)
% beräkna numeriska lösningar, fel vid sluttiden och noggrannhetsordningar med deltat, deltat/2, deltat/4.
